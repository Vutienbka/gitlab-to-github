<%= render 'form', url: buyers_claim_path, method: 'post' %>

<script type="text/javascript">
  Dropzone.autoDiscover = false;
  let id = $('.flex--file3').data('item-drawing');
  let formData = new FormData();

  $('.dropzone').each(function(){
    $(this).dropzone({
      url: "/buyers/item_requests/" + id + "/item_drawings/update",
      dictDefaultMessage: "<p>ここにファイルを<br>ドラッグアンドドロップ</p><p>または</p><label for='file_upload'>PCから<span class='textbr'>アップロード</span></label>",
      uploadMultiple: true,
      addRemoveLinks: true,
      autoProcessQueue: false,
      parallelUploads: 100,
      maxFiles: 100,
      headers: {
        'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
      },
      init: function() {
        var myDropzone = this;
        if (myDropzone.files.length <= 0 && myDropzone.element.id == 'myDropzone0') {
          $("#btnSubmit").attr('disabled', 'disabled');
        }

        this.on("addedfile", function(file) {
          switch (myDropzone.element.id) {
            case 'myDropzone0':
              $("#btnSubmit").removeAttr('disabled');
              formData.append("item_drawing[file_specifications][" + this.files.length + "]", file);
              break;
            case 'myDropzone1':
              formData.append("item_drawing[file_assembly_specifications][" + this.files.length + "]", file);
              break;
            case 'myDropzone2':
              formData.append("item_drawing[file_packing_specifications][" + this.files.length + "]", file);
              break;
            default:
              break;
          }
          // Prevent upload duplicate files
          if (this.files.length) {
            var i, len;
            for (i = 0, len = this.files.length; i < len - 1; i++) {
              if (this.files[i].name === file.name && this.files[i].size === file.size && this.files[i].lastModifiedDate.toString() === file.lastModifiedDate.toString()) {
                alert("このファイル" + file.name + "が既に存在しています。");
                this.removeFile(file);
              }
            }
          }
        });
        this.on("removedfile", function(file) {
          var _ref,
              url = "/buyers/item_requests/" + id + "/item_drawings/remove_file";

          switch (myDropzone.element.id) {
            case 'myDropzone0':
              var index_of_file_specifications = file.index
              break;
            case 'myDropzone1':
              var index_of_file_assembly_specifications = file.index
              break;
            case 'myDropzone2':
              var index_of_file_packing_specifications = file.index
              break;
            default:
              break;
          }

          // Prevent action when uploading
          prevent_action_when_uploading();

          $.ajax({
            url: url,
            type: "DELETE",
            data: {
              index_of_file_specifications: index_of_file_specifications,
              index_of_file_assembly_specifications: index_of_file_assembly_specifications,
              index_of_file_packing_specifications: index_of_file_packing_specifications,
            },
            headers: {
              'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
            },
            success: function(data) {
              location.reload();
            },
            error: function(jqXHR, textStatus, errorThrown) {
              console.log('AJAX call failed.');
              console.log(textStatus + ': ' + errorThrown);
            },
            complete: function() {
              console.log('AJAX call completed');
            }
          });
        });
        switch (myDropzone.element.id) {
          case 'myDropzone0':
            <% @item_drawing.file_specifications.each_with_index do |image, index| %>
              var mockFile = {
                name: "<%= image.file.filename %>",
                size: <%= image.size %>,
                index: <%= index %>,
              }
              myDropzone.emit("addedfile", mockFile);
              myDropzone.createThumbnailFromUrl(mockFile, "<%= image.url %>");
              myDropzone.emit("complete", mockFile);
              myDropzone.files.push(mockFile);
            <% end %>
            break;
          case 'myDropzone1':
            <% @item_drawing.file_assembly_specifications.each_with_index do |image, index| %>
              var mockFile = {
                name: "<%= image.file.filename %>",
                size: <%= image.size %>,
                index: <%= index %>,
              }
              myDropzone.emit("addedfile", mockFile);
              myDropzone.createThumbnailFromUrl(mockFile, "<%= image.url %>");
              myDropzone.emit("complete", mockFile);
              myDropzone.files.push(mockFile);
            <% end %>
            break;
          case 'myDropzone2':
            <% @item_drawing.file_packing_specifications.each_with_index do |image, index| %>
              var mockFile = {
                name: "<%= image.file.filename %>",
                size: <%= image.size %>,
                index: <%= index %>,
              }
              myDropzone.emit("addedfile", mockFile);
              myDropzone.createThumbnailFromUrl(mockFile, "<%= image.url %>");
              myDropzone.emit("complete", mockFile);
              myDropzone.files.push(mockFile);
            <% end %>
            break;
          default:
            break;
        }
      }
    });
  });

  $(".continue-btn").on("click", function(e) {
    e.preventDefault();
    e.stopPropagation();

    // Prevent action when uploading
    prevent_action_when_uploading();

    $.ajax({
      url: "/buyers/item_requests/" + id + "/item_drawings/update",
      type: "POST",
      data:  formData,
      dataType: 'json',
      contentType: false,
      processData: false,
      headers: {
        'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
      },
      success: function(data) {
        window.location.href = "/buyers/item_requests/" + id + "/item_images/edit"
      },
      error: function(jqXHR, textStatus, errorThrown) {
        console.log('AJAX call failed.');
        console.log(textStatus + ': ' + errorThrown);
      },
      complete: function() {
        console.log('AJAX call completed');
      }
    });
  });

  function prevent_action_when_uploading() {
    $('.flex--file3').prepend('<img id="ripple_loading" src="<%= asset_path('ripple_loading.svg') %>" />')
    $("#btnSubmit").attr('disabled', 'disabled');
    $(".dz-remove").addClass('d-none');
  }
</script>
